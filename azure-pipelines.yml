# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

pr: none

trigger:
  branches:
    include:
      - test

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: 'cd2d36b2-b780-4139-9c54-da3f5cfd4c1c'

  # Web app name
  webAppName: 'loggingtest4'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'loggingtest4'

  # Project root folder. Point to the folder containing the Flask application
  projectRoot: $(System.DefaultWorkingDirectory)

  # Python version: 3.11
  pythonVersion: '3.11'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Publish artifact'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - download: current
      artifact: drop
      displayName: 'Download Artifacts'

    - script: ls -la $(Pipeline.Workspace)/drop/
      displayName: 'List files in drop folder'

    - script: |
        echo "Cleaning up previous deployments"
        curl -X DELETE -u $(azureServiceConnectionId):$(servicePrincipalKey) https://$(webAppName).scm.azurewebsites.net/api/vfs/site/wwwroot/
      displayName: 'Clean up previous deployments'

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - task: AzureWebApp@1
      displayName: 'Deploy Azure Web App : $(webAppName)'
      inputs:
        azureSubscription: $(azureServiceConnectionId)
        appName: $(webAppName)
        package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
        deploymentMethod: 'zipDeploy'
        takeAppOfflineFlag: true
        enableXmlTransform: false
        enableCustomDeployment: true
        verbose: true
              deploymentMethod: 'zipDeploy'
              takeAppOfflineFlag: true
              enableXmlTransform: false
              verbose: true
